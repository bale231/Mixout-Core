"""
Django settings for mixoutcore project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

# === Core ===
SECRET_KEY = 'django-insecure-+lv_@x&uwr+l9gfhu)=&o%y7c7xq%tr2%&e$!5q$tbcde#he2i'
DEBUG = True

# Accetta richieste da 127.0.0.1/localhost/0.0.0.0 in dev (docker)
ALLOWED_HOSTS = ["127.0.0.1", "localhost", "0.0.0.0"]

# Se fai POST/redirect cross-origin da UI â†’ Django, aggiungi gli origin fidati
CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
    "http://127.0.0.1:4455",
    "http://localhost:4455",
]

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "accounts",
    # Se usi django-cors-headers:
    # "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "core.kratos_auth.KratosSessionMiddleware",
    # ATTENZIONE: prima avevi 'app.kratos_auth.KratosSessionMiddleware'
    # Ma il modulo 'app' non esiste: rimuovo per evitare crash.
    # Quando avrai il middleware reale, usa il path corretto, es.:
    # "mixoutcore.kratos_auth.KratosSessionMiddleware",
    # Se usi django-cors-headers, inserisci anche:
    # "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "mixoutcore.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mixoutcore.wsgi.application"

# Database (Django)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}
# NB: dai log stai usando anche Mongo con mongoengine altrove: ok, lasciamo SQLite per le parti Django.

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# I18N / TZ
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Static
STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / 'staticfiles'

# WhiteNoise: auto-reload in debug (comodo in dev)
WHITENOISE_AUTOREFRESH = True

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Cookie policy (dev defaults ok, ma esplicito per chiarezza)
SESSION_COOKIE_SAMESITE = "Lax"
CSRF_COOKIE_SAMESITE = "Lax"
KRATOS_WEBHOOK_TOKEN = os.getenv("KRATOS_WEBHOOK_TOKEN", "dev-secret-123")

# Se usi django-cors-headers (opzionale):
# CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOWED_ORIGINS = [
#     "http://127.0.0.1:4455",
#     "http://localhost:4455",
# ]
